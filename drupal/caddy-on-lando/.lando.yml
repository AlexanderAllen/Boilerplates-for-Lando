name: caddy

# https://docs.lando.dev/config/drupal9.html#getting-started
recipe: drupal9
config:
  webroot: .
  composer_version: 2-latest

proxy:
  solr:
    - solr.caddy.lndo.site:8983
  pma:
    - pma.caddy.lndo.site
  caddy:
    - pma-fpm.caddy.lndo.site
    # - pma-fpm.caddy.lndo.site:443
    # - ssl-pma-fpm.caddy.lndo.site

env_file:
  - lando/default.env
  - lando/private.env

tooling:
  drush:
    description: Executes Drush commands
    service: appserver
    cmd: php /app/html/vendor/bin/drush --root=/app/html/web

  drupal:
    description: Executes Drupal Console commands
    service: appserver
    cmd: php /app/html/vendor/bin/drupal --root=/app/html/web

  composer:
    description: Executes composer commands
    service: appserver
    cmd: composer
    dir: /app/html

services:
  solr:
    type: solr:8
    portforward: false
    port: 8983
    core: lando
    config:
      dir: config/splits/search_api_solr/jump-start/solr8/config-set

  database:
    type: mariadb:10.5
    portforward: false
    creds:
      user: drupal
      password: drupal
      database: drupal9
    config:
      database: lando/custom.cnf
    build_as_root:
      - apt update -y
      - apt-get install -y xz-utils

  memcached:
    type: memcached:1
    portforward: false
    mem: 64

  # https://hub.docker.com/_/phpmyadmin
  # https://docs.phpmyadmin.net/en/latest/setup.html#customizing-configuration
  pma:
    type: compose
    app_mount: false
    portforward: false

    # Attempt to generate a certificate for the container on the proxy.
    ssl: true

    services:
      image: phpmyadmin:5.1.1-apache
      command: /docker-entrypoint.sh apache2-foreground
      volumes:
        - ../BoilerplateTrustRoot.crt.pem:/opt/BoilerplateTrustRoot.crt.pem
        - lando/config.user3.inc.php:/etc/phpmyadmin/config.user.inc.php
    build_as_root:
      - apt update
      - apt install -y iputils-ping inetutils-telnet


  caddy:
    type: compose
    app_mount: false
    portforward: false

    # https://docs.lando.dev/config/proxy.html#using-https
    # ssl: true

    # Expose TLS but do not generate a certificate.
    sslExpose: true

    services:
      image: alexanderallen/caddy-pma:2.4.6-alpine
      command: caddy run --config /etc/caddy/Caddyfile
      environment:
        SERVER_NAME: ':80'
      volumes:
        - ./lando/pma/Caddyfile:/etc/caddy/Caddyfile
      #ports:
        # If you take 4000, how are you going to bind 443.
       # - 4000:443
      # expose:
      #   - 80
      #   - 443
      #   - 2019

  pma-fpm:
    type: compose
    app_mount: false
    portforward: false

    services:
      image: phpmyadmin:5-fpm-alpine
      command: /docker-entrypoint.sh php-fpm
      expose:
        - 9000
      volumes:
        - ../BoilerplateTrustRoot.crt.pem:/opt/BoilerplateTrustRoot.crt.pem
        - lando/config.user3.inc.php:/etc/phpmyadmin/config.user.inc.php

  # landopma:
  #   type: phpmyadmin:5.1
  #   hosts:
  #     - database
  #   config:
  #     config: lando/config.user3.inc.php
  #   overrides:
  #     volumes:
  #       - ../BaltimoreCyberTrustRoot.crt.pem:/opt/BaltimoreCyberTrustRoot.crt.pem




  appserver:
    # https://docs.lando.dev/config/php.html#supported-versions
    # https://www.drupal.org/docs/understanding-drupal/how-drupal-9-was-made-and-what-is-included/environment-requirements-of-drupal-9
    # Drupal 9 requires at least PHP 7.3. PHP 7.4 is also supported but not required. PHP 8 is supported from Drupal 9.1.0.
    type: php:8.0
    #via: nginx

    # https://docs.lando.dev/config/php.html#configuration
    xdebug: "debug,develop,coverage"
    config:
      php: lando/php.ini

    # https://docs.lando.dev/config/php.html#configuring-xdebug
    overrides:
      environment:
        DRUSH_OPTIONS_URI: https://caddy.lndo.site
        COMPOSER_ALLOW_XDEBUG: 1
        COMPOSER_DISABLE_XDEBUG_WARN: 1
        # https://xdebug.org/docs/all_settings#mode
        XDEBUG_CONFIG: discover_client_host=false log=/tmp/xdebug.log mode=debug,develop,coverage
        XDEBUG_REMOTE_HOST: host.docker.internal
        # Optional, set XDEBUG_MODE manually.
        # XDEBUG_MODE: debug,develop,coverage

    # Install any system dependencies. Memcached already installed.
    # build_as_root:
    #   - apt update -y
    #   - apt-get install -y iputils-ping telnet vim > /dev/null 2>&1

    build:
      - bash -c "echo ''"
      # - bash -c "echo '=== INSTALL COMPOSER DEPENDENCIES ==='"
      # - composer -v update --with-all-dependencies --working-dir=/app/html
      # - composer install --optimize-autoloader --prefer-dist --working-dir=/app/html

      # Cleanup app dir before clean install.
      - rm -rf /app/html
      - mkdir /app/html

      # If you need to create a new baseline Drupal project.
      # https://www.drupal.org/docs/develop/using-composer/using-composer-to-install-drupal-and-manage-dependencies
      - composer create-project drupal/recommended-project:^9.2 /app/html

      # - composer require --working-dir=/app/html \
      #     drush/drush:^10.0

